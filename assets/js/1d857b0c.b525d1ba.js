"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7087],{3905:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},f=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),p=l(r),d=i,y=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(y,s(s({ref:t},f),{},{components:r})):n.createElement(y,s({ref:t},f))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=p;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8396:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(3117),i=(r(7294),r(3905));const o={term:"terminology-identifier",termType:"concept",isa:"identifier",bodyFile:"/specs/syntax/31-terminology-identifiers.md",glossaryTerm:"Terminology Identifier",glossaryText:"a [text](identifier@), of the form `<scopetag>:<vsntag>`, that identifies a [terminology](@) from within a particular [scope](@), and can also be used to find the [MRG](@) file (in the [glossarydir](@) of that same [scope](@)) that contains [entries](mrg-entry@) for every [term](@) contained in that [terminology](@).",glossaryNotes:["If `<scopetag>` and/or `:<vsntag>` is omitted, their values are taken be the current (or default) ones."],grouptags:[],formPhrases:["terminology-identifier{ss}"],attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},s=void 0,a={unversionedId:"terms/terminology-identifier",id:"terms/terminology-identifier",title:"terminology-identifier",description:"",source:"@site/docs/terms/terminology-identifier.md",sourceDirName:"terms",slug:"/terms/terminology-identifier",permalink:"/tev2-specifications/docs/terms/terminology-identifier",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/terminology-identifier.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1714549105,formattedLastUpdatedAt:"May 1, 2024",frontMatter:{term:"terminology-identifier",termType:"concept",isa:"identifier",bodyFile:"/specs/syntax/31-terminology-identifiers.md",glossaryTerm:"Terminology Identifier",glossaryText:"a [text](identifier@), of the form `<scopetag>:<vsntag>`, that identifies a [terminology](@) from within a particular [scope](@), and can also be used to find the [MRG](@) file (in the [glossarydir](@) of that same [scope](@)) that contains [entries](mrg-entry@) for every [term](@) contained in that [terminology](@).",glossaryNotes:["If `<scopetag>` and/or `:<vsntag>` is omitted, their values are taken be the current (or default) ones."],grouptags:[],formPhrases:["terminology-identifier{ss}"],attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},l=[],f={toc:l};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0}}]);